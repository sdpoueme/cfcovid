{"remainingRequest":"/Users/i870019/Projects/cfcovid/node_modules/babel-loader/lib/index.js!/Users/i870019/Projects/cfcovid/node_modules/vuetify/lib/mixins/colorable/index.js","dependencies":[{"path":"/Users/i870019/Projects/cfcovid/node_modules/vuetify/lib/mixins/colorable/index.js","mtime":499162500000},{"path":"/Users/i870019/Projects/cfcovid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/i870019/Projects/cfcovid/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0iOwppbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSAiL1VzZXJzL2k4NzAwMTkvUHJvamVjdHMvY2Zjb3ZpZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL2k4NzAwMTkvUHJvamVjdHMvY2Zjb3ZpZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvaTg3MDAxOS9Qcm9qZWN0cy9jZmNvdmlkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgeyBjb25zb2xlRXJyb3IgfSBmcm9tICcuLi8uLi91dGlsL2NvbnNvbGUnOwoKZnVuY3Rpb24gaXNDc3NDb2xvcihjb2xvcikgewogIHJldHVybiAhIWNvbG9yICYmICEhY29sb3IubWF0Y2goL14oI3x2YXJcKC0tfChyZ2J8aHNsKWE/XCgpLyk7Cn0KCmV4cG9ydCBkZWZhdWx0IFZ1ZS5leHRlbmQoewogIG5hbWU6ICdjb2xvcmFibGUnLAogIHByb3BzOiB7CiAgICBjb2xvcjogU3RyaW5nCiAgfSwKICBtZXRob2RzOiB7CiAgICBzZXRCYWNrZ3JvdW5kQ29sb3I6IGZ1bmN0aW9uIHNldEJhY2tncm91bmRDb2xvcihjb2xvcikgewogICAgICB2YXIgZGF0YSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307CgogICAgICBpZiAodHlwZW9mIGRhdGEuc3R5bGUgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHQKICAgICAgICBjb25zb2xlRXJyb3IoJ3N0eWxlIG11c3QgYmUgYW4gb2JqZWN0JywgdGhpcyk7IC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0CgogICAgICAgIHJldHVybiBkYXRhOwogICAgICB9CgogICAgICBpZiAodHlwZW9mIGRhdGFbImNsYXNzIl0gPT09ICdzdHJpbmcnKSB7CiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHQKICAgICAgICBjb25zb2xlRXJyb3IoJ2NsYXNzIG11c3QgYmUgYW4gb2JqZWN0JywgdGhpcyk7IC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0CgogICAgICAgIHJldHVybiBkYXRhOwogICAgICB9CgogICAgICBpZiAoaXNDc3NDb2xvcihjb2xvcikpIHsKICAgICAgICBkYXRhLnN0eWxlID0gX29iamVjdFNwcmVhZCh7fSwgZGF0YS5zdHlsZSwgewogICAgICAgICAgJ2JhY2tncm91bmQtY29sb3InOiAiIi5jb25jYXQoY29sb3IpLAogICAgICAgICAgJ2JvcmRlci1jb2xvcic6ICIiLmNvbmNhdChjb2xvcikKICAgICAgICB9KTsKICAgICAgfSBlbHNlIGlmIChjb2xvcikgewogICAgICAgIGRhdGFbImNsYXNzIl0gPSBfb2JqZWN0U3ByZWFkKHt9LCBkYXRhWyJjbGFzcyJdLCBfZGVmaW5lUHJvcGVydHkoe30sIGNvbG9yLCB0cnVlKSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBkYXRhOwogICAgfSwKICAgIHNldFRleHRDb2xvcjogZnVuY3Rpb24gc2V0VGV4dENvbG9yKGNvbG9yKSB7CiAgICAgIHZhciBkYXRhID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTsKCiAgICAgIGlmICh0eXBlb2YgZGF0YS5zdHlsZSA9PT0gJ3N0cmluZycpIHsKICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dAogICAgICAgIGNvbnNvbGVFcnJvcignc3R5bGUgbXVzdCBiZSBhbiBvYmplY3QnLCB0aGlzKTsgLy8gaXN0YW5idWwgaWdub3JlIG5leHQKCiAgICAgICAgcmV0dXJuIGRhdGE7CiAgICAgIH0KCiAgICAgIGlmICh0eXBlb2YgZGF0YVsiY2xhc3MiXSA9PT0gJ3N0cmluZycpIHsKICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dAogICAgICAgIGNvbnNvbGVFcnJvcignY2xhc3MgbXVzdCBiZSBhbiBvYmplY3QnLCB0aGlzKTsgLy8gaXN0YW5idWwgaWdub3JlIG5leHQKCiAgICAgICAgcmV0dXJuIGRhdGE7CiAgICAgIH0KCiAgICAgIGlmIChpc0Nzc0NvbG9yKGNvbG9yKSkgewogICAgICAgIGRhdGEuc3R5bGUgPSBfb2JqZWN0U3ByZWFkKHt9LCBkYXRhLnN0eWxlLCB7CiAgICAgICAgICBjb2xvcjogIiIuY29uY2F0KGNvbG9yKSwKICAgICAgICAgICdjYXJldC1jb2xvcic6ICIiLmNvbmNhdChjb2xvcikKICAgICAgICB9KTsKICAgICAgfSBlbHNlIGlmIChjb2xvcikgewogICAgICAgIHZhciBfY29sb3IkdG9TdHJpbmckdHJpbSQgPSBjb2xvci50b1N0cmluZygpLnRyaW0oKS5zcGxpdCgnICcsIDIpLAogICAgICAgICAgICBfY29sb3IkdG9TdHJpbmckdHJpbSQyID0gX3NsaWNlZFRvQXJyYXkoX2NvbG9yJHRvU3RyaW5nJHRyaW0kLCAyKSwKICAgICAgICAgICAgY29sb3JOYW1lID0gX2NvbG9yJHRvU3RyaW5nJHRyaW0kMlswXSwKICAgICAgICAgICAgY29sb3JNb2RpZmllciA9IF9jb2xvciR0b1N0cmluZyR0cmltJDJbMV07CgogICAgICAgIGRhdGFbImNsYXNzIl0gPSBfb2JqZWN0U3ByZWFkKHt9LCBkYXRhWyJjbGFzcyJdLCBfZGVmaW5lUHJvcGVydHkoe30sIGNvbG9yTmFtZSArICctLXRleHQnLCB0cnVlKSk7CgogICAgICAgIGlmIChjb2xvck1vZGlmaWVyKSB7CiAgICAgICAgICBkYXRhWyJjbGFzcyJdWyd0ZXh0LS0nICsgY29sb3JNb2RpZmllcl0gPSB0cnVlOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIGRhdGE7CiAgICB9CiAgfQp9KTs="},{"version":3,"sources":["../../../src/mixins/colorable/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAA,GAAA,MAAA,KAAA;AAEA,SAAA,YAAA,QAAA,oBAAA;;AAEA,SAAA,UAAA,CAAA,KAAA,EAA2C;AACzC,SAAO,CAAC,CAAD,KAAA,IAAW,CAAC,CAAC,KAAK,CAAL,KAAA,CAApB,4BAAoB,CAApB;AACD;;AAED,eAAe,GAAG,CAAH,MAAA,CAAW;AACxB,EAAA,IAAI,EADoB,WAAA;AAGxB,EAAA,KAAK,EAAE;AACL,IAAA,KAAK,EAAE;AADF,GAHiB;AAOxB,EAAA,OAAO,EAAE;AACP,IAAA,kBADO,8BACW,KADX,EACyD;AAAA,UAApB,IAAoB,uEAA9C,EAA8C;;AAC9D,UAAI,OAAO,IAAI,CAAX,KAAA,KAAJ,QAAA,EAAoC;AAClC;AACA,QAAA,YAAY,CAAA,yBAAA,EAFsB,IAEtB,CAAZ,CAFkC,CAGlC;;AACA,eAAA,IAAA;AACD;;AACD,UAAI,OAAO,IAAP,SAAA,KAAJ,QAAA,EAAoC;AAClC;AACA,QAAA,YAAY,CAAA,yBAAA,EAFsB,IAEtB,CAAZ,CAFkC,CAGlC;;AACA,eAAA,IAAA;AACD;;AACD,UAAI,UAAU,CAAd,KAAc,CAAd,EAAuB;AACrB,QAAA,IAAI,CAAJ,KAAA,qBACK,IAAI,CADI,KAAb;AAEE,wCAFW,KAEX,CAFF;AAGE,oCAAmB,KAAnB;AAHF;AADF,OAAA,MAMO,IAAA,KAAA,EAAW;AAChB,QAAA,IAAA,SAAA,qBACK,IADQ,SAAb,sBAEE,KAFF,EAEW,IAFX;AAID;;AAED,aAAA,IAAA;AA3BK,KAAA;AA8BP,IAAA,YA9BO,wBA8BK,KA9BL,EA8BmD;AAAA,UAApB,IAAoB,uEAA9C,EAA8C;;AACxD,UAAI,OAAO,IAAI,CAAX,KAAA,KAAJ,QAAA,EAAoC;AAClC;AACA,QAAA,YAAY,CAAA,yBAAA,EAFsB,IAEtB,CAAZ,CAFkC,CAGlC;;AACA,eAAA,IAAA;AACD;;AACD,UAAI,OAAO,IAAP,SAAA,KAAJ,QAAA,EAAoC;AAClC;AACA,QAAA,YAAY,CAAA,yBAAA,EAFsB,IAEtB,CAAZ,CAFkC,CAGlC;;AACA,eAAA,IAAA;AACD;;AACD,UAAI,UAAU,CAAd,KAAc,CAAd,EAAuB;AACrB,QAAA,IAAI,CAAJ,KAAA,qBACK,IAAI,CADI,KAAb;AAEE,UAAA,KAAK,YAFM,KAEN,CAFP;AAGE,mCAAkB,KAAlB;AAHF;AADF,OAAA,MAMO,IAAA,KAAA,EAAW;AAAA,oCACmB,KAAK,CAAL,QAAA,GAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAnC,CAAmC,CADnB;AAAA;AAAA,YACV,SADU;AAAA,YACV,aADU;;AAEhB,QAAA,IAAA,SAAA,qBACK,IADQ,SAAb,sBAEG,SAAS,GAAV,QAFF,EAE0B,IAF1B;;AAIA,YAAA,aAAA,EAAmB;AACjB,UAAA,IAAA,SAAA,CAAW,WAAX,aAAA,IAAA,IAAA;AACD;AACF;;AACD,aAAA,IAAA;AACD;AA5DM;AAPe,CAAX,CAAf","sourcesContent":["import Vue from 'vue'\nimport { VNodeData } from 'vue/types/vnode'\nimport { consoleError } from '../../util/console'\n\nfunction isCssColor (color?: string | false): boolean {\n  return !!color && !!color.match(/^(#|var\\(--|(rgb|hsl)a?\\()/)\n}\n\nexport default Vue.extend({\n  name: 'colorable',\n\n  props: {\n    color: String,\n  },\n\n  methods: {\n    setBackgroundColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          'background-color': `${color}`,\n          'border-color': `${color}`,\n        }\n      } else if (color) {\n        data.class = {\n          ...data.class,\n          [color]: true,\n        }\n      }\n\n      return data\n    },\n\n    setTextColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          color: `${color}`,\n          'caret-color': `${color}`,\n        }\n      } else if (color) {\n        const [colorName, colorModifier] = color.toString().trim().split(' ', 2) as (string | undefined)[]\n        data.class = {\n          ...data.class,\n          [colorName + '--text']: true,\n        }\n        if (colorModifier) {\n          data.class['text--' + colorModifier] = true\n        }\n      }\n      return data\n    },\n  },\n})\n"],"sourceRoot":""}]}