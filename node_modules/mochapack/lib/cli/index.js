"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var path_1 = __importDefault(require("path"));
var lodash_1 = __importDefault(require("lodash"));
var parseArgv_1 = __importDefault(require("./parseArgv"));
var exists_1 = require("../util/exists");
var parseConfig_1 = __importDefault(require("./parseConfig"));
var requireWebpackConfig_1 = __importDefault(require("./requireWebpackConfig"));
var glob_1 = require("../util/glob");
var createMochaWebpack_1 = __importDefault(require("../createMochaWebpack"));
function resolve(mod) {
    var absolute = exists_1.existsFileSync(mod) || exists_1.existsFileSync(mod + ".js");
    var file = absolute ? path_1["default"].resolve(mod) : mod;
    return file;
}
function exit(lazy, code) {
    if (lazy) {
        process.on('exit', function () {
            process.exit(code);
        });
    }
    else {
        process.exit(code);
    }
}
function cli() {
    return __awaiter(this, void 0, void 0, function () {
        var cliOptions, configOptions, requiresWebpackConfig, defaultOptions, options, _a, mochaWebpack, extensions, fallbackFileGlob, fileGlob;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    cliOptions = parseArgv_1["default"](process.argv.slice(2), true);
                    configOptions = parseConfig_1["default"](cliOptions.opts);
                    requiresWebpackConfig = cliOptions.webpackConfig != null || configOptions.webpackConfig != null;
                    defaultOptions = parseArgv_1["default"]([]);
                    options = lodash_1["default"].defaults({}, cliOptions, configOptions, defaultOptions);
                    options.require.forEach(function (mod) {
                        require(resolve(mod)); // eslint-disable-line global-require, import/no-dynamic-require
                    });
                    options.include = options.include.map(resolve);
                    _a = options;
                    return [4 /*yield*/, requireWebpackConfig_1["default"](options.webpackConfig, requiresWebpackConfig, options.webpackEnv, options.mode)];
                case 1:
                    _a.webpackConfig = _b.sent();
                    mochaWebpack = createMochaWebpack_1["default"]();
                    options.include.forEach(function (f) { return mochaWebpack.addInclude(f); });
                    extensions = lodash_1["default"].get(options.webpackConfig, 'resolve.extensions', ['.js']);
                    fallbackFileGlob = glob_1.extensionsToGlob(extensions);
                    fileGlob = options.glob != null ? options.glob : fallbackFileGlob;
                    options.files.forEach(function (f) {
                        return mochaWebpack.addEntry(glob_1.ensureGlob(f, options.recursive, fileGlob));
                    });
                    mochaWebpack.cwd(process.cwd());
                    mochaWebpack.webpackConfig(options.webpackConfig);
                    mochaWebpack.bail(options.bail);
                    mochaWebpack.reporter(options.reporter, options.reporterOptions);
                    mochaWebpack.ui(options.ui);
                    mochaWebpack.interactive(options.interactive);
                    mochaWebpack.clearTerminal(options.clearTerminal);
                    if (options.fgrep) {
                        mochaWebpack.fgrep(options.fgrep);
                    }
                    if (options.grep) {
                        mochaWebpack.grep(options.grep);
                    }
                    if (options.invert) {
                        mochaWebpack.invert();
                    }
                    if (options.checkLeaks) {
                        mochaWebpack.ignoreLeaks(false);
                    }
                    if (options.fullTrace) {
                        mochaWebpack.fullStackTrace();
                    }
                    if (options.quiet) {
                        mochaWebpack.quiet();
                    }
                    mochaWebpack.useColors(options.colors);
                    mochaWebpack.useInlineDiffs(options.inlineDiffs);
                    mochaWebpack.timeout(options.timeout);
                    if (options.retries) {
                        mochaWebpack.retries(options.retries);
                    }
                    mochaWebpack.slow(options.slow);
                    if (options.asyncOnly) {
                        mochaWebpack.asyncOnly();
                    }
                    if (options.delay) {
                        mochaWebpack.delay();
                    }
                    if (options.growl) {
                        mochaWebpack.growl();
                    }
                    if (options.forbidOnly) {
                        mochaWebpack.forbidOnly();
                    }
                    return [4 /*yield*/, Promise.resolve()
                            // @ts-ignore
                            .then(function () {
                            if (options.watch) {
                                return mochaWebpack.watch();
                            }
                            return mochaWebpack.run();
                        })
                            .then(function (failures) {
                            exit(options.exit, failures);
                        })["catch"](function (e) {
                            if (e) {
                                console.error(e.stack); // eslint-disable-line
                            }
                            exit(options.exit, 1);
                        })];
                case 2:
                    _b.sent();
                    return [2 /*return*/];
            }
        });
    });
}
cli();
//# sourceMappingURL=index.js.map